
/*
* Each new term in the Fibonacci sequence is generated by adding the previous two terms.
* By starting with 1 and 2, the first 10 terms will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

* By considering the terms in the Fibonacci sequence whose values do not exceed four million,
* find the sum of the even-valued terms.
* */


public class EvenFibonacciNumbers {

    public static void SumOfEvenFibonacciNumbers(){
        int firstPreviousTerm = 0,
            secondPreviousTerm = 1,
            nextTerm = 0,
            sumOfTerms = 0,
            SumOfOdd = 0,
            sumTotal = 0,
            LIMIT = 4000000;

        while(nextTerm <= LIMIT){
            //find next fibo number as sum of two previous terms
            nextTerm = firstPreviousTerm + secondPreviousTerm;
            firstPreviousTerm = secondPreviousTerm;
            secondPreviousTerm = nextTerm;

            //sum up the even numbered fibo number
            if((nextTerm % 2) == 0) {
                sumOfTerms += nextTerm;
            }
            else {
                SumOfOdd += nextTerm;
            }

            sumTotal += nextTerm;
        }

        System.out.println("\nSum of even numbered Fibonaccci terms: " + sumOfTerms);
        System.out.println("\nSum of odd numbered Fibonaccci terms: " + SumOfOdd);

        if (sumTotal == (sumOfTerms + SumOfOdd)) {
            System.out.println("\nCorrecto!!!!");
        }
    }
}
